@page "/create-event"
@using webapp.Service
@inject IEventService EventService
@inject ILocationService LocationService

<EditForm Model="NewEvent" OnValidSubmit="CreateEventNow" class="card" style="max-width: 800px; margin: auto; padding: 20px;">

    <h4 class="text-center">Opret Event</h4>

    <div class="form-group">
        <label for="Title">Titel</label>
        <InputText id="Title" class="form-control" @bind-Value="NewEvent.Title" placeholder="Indtast Titel" />
    </div>

    <div class="form-group">
        <label for="Date">Dato</label>
        <InputDate id="Date" class="form-control" @bind-Value="NewEvent.DateForEvent" />
    </div>

    <div class="form-group">
        <label for="Location">Lokation</label>
        <InputSelect id="Location" class="form-control" @bind-Value="NewEvent.LocationId">
            <option value="0">Vælg Lokation</option>
            @foreach (var location in Locations)
            {
            <option value="@location.Id">@location.Name</option>
            }
        </InputSelect>
    </div>

    <div class="form-group">
        <label for="FoodChoice">Madvalg</label>
        <InputText id="FoodChoice" class="form-control" @bind-Value="NewEvent.FoodChoices" placeholder="Indtast madvalg" />
    </div>

    <div class="form-group">
        <label for="SpecialRequest">Særlige mad behov</label>
        <InputText id="SpecialRequest" class="form-control" @bind-Value="NewEvent.SpecialRequest" placeholder="Indtast special ønsker til mad" />
    </div>

    <div class="form-group">
        <label for="ByCustomer">Kunde</label>
        <InputText id="ByCustomer" class="form-control" @bind-Value="NewEvent.ByCustomer" placeholder="Indtast kunde" />
    </div>

    <div class="form-group">
        <label for="Participant">Deltagere</label>
        <InputNumber id="Participant" class="form-control" @bind-Value="NewEvent.Participants" />
    </div>

    <div class="form-group text-center mt-4">
        <button type="submit" class="btn btn-primary">Opret Event</button>
    </div>

</EditForm>

@code {
    private TaskEvent NewEvent = new TaskEvent();
    private IEnumerable<Location> Locations = Enumerable.Empty<Location>();
    [Parameter]
    public EventCallback OnEventCreated { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Locations = await LocationService.GetAllLocationsAsync();
    }

    private async Task CreateEventNow()
    {
        try
        {
            var isSuccess = await EventService.CreateEventAsync(NewEvent);
            if (isSuccess)
            {
                NewEvent = new TaskEvent();
                await OnEventCreated.InvokeAsync(); // Trigger the callback when the event is successfully created
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating event: {ex.Message}");
        }
    }

}
