 graph TB
     subgraph "Task Creation Implementation"
         Actor((Kantineleder))

         subgraph "Controller Layer"
             CreateTaskEndpoint["/api/tasks POST"]
             TaskController["TaskController.Create(TaskItem task)"]
         end

         subgraph "Service Layer"
             TaskService["TaskService.CreateTaskAsync(TaskItem newTaskItem)"]
             GetEvents["EventService.GetEvents()"]
             GetUsers["UserService.GetAllAsync()"]
         end

         subgraph "Repository Layer"
             TaskRepo["TaskRepository.CreateAsync(TaskItem entity)"]
             EventRepo["EventRepository.GetAllAsync()"]
             UserRepo["UserRepository.GetAllAsync()"]
         end

         subgraph "Models"
             TaskItem["TaskItem {
                 Title: string
                 Description: string
                 Date: DateTime
                 StartTime: TimeOnly
                 EndTime: TimeOnly
                 Status: TaskStatus
                 AssignedToIds: List<int>
                 EventIds: List<int>
             }"]
         end

         subgraph "Exception Flows"
             ValidationError["Input Validation Error
             return BadRequest(ModelState)
             - Manglende titel
             - Ugyldig dato/tid
             - Ingen medarbejder tildelt"]

             DatabaseError["Database Error
             return StatusCode(500)
             - Connection failed
             - Timeout
             - Constraint violation"]
         end

         %% Flow
         Actor --> CreateTaskEndpoint
         CreateTaskEndpoint --> TaskController
         TaskController --> TaskService
         TaskService --> TaskRepo
         TaskService --> GetEvents
         TaskService --> GetUsers
         GetEvents --> EventRepo
         GetUsers --> UserRepo
         TaskRepo --> TaskItem

         %% Exception Flows
         TaskController -.-> ValidationError
         TaskRepo -.-> DatabaseError

         %% Styling
         classDef controller fill:#e6f3ff,stroke:#4d94ff
         classDef service fill:#f2ffe6,stroke:#80ff00
         classDef repository fill:#ffe6e6,stroke:#ff4d4d
         classDef model fill:#f9f9f9,stroke:#666
         classDef error fill:#ffcccc,stroke:#ff0000

         class CreateTaskEndpoint,TaskController controller
         class TaskService,GetEvents,GetUsers service
         class TaskRepo,EventRepo,UserRepo repository
         class TaskItem model
         class ValidationError,DatabaseError error
     end



